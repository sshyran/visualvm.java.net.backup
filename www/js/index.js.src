// index.js generated by Online Javascript compressor http://javascriptcompressor.com/

var projectTools2;
var showProjectTools;
var hideProjectTools;

// Sets "long-life" cookie (expires December 31th, 2020)
function setCookie(name, value) {
    var cookie_string = name + "=" + escape(value);
    cookie_string += "; expires=" + new Date(2020, 12, 31).toGMTString();
    cookie_string += "; domain=.visualvm.dev.java.net";
    cookie_string += "; path=/";
    document.cookie = cookie_string;
}

// Gets cookie
function getCookie(name) {
    var results = document.cookie.match ('(^|;) ?' + name + '=([^;]*)(;|$)');
    if (results) return unescape(results[2]);
    else return null;
}

// Adds new window.onload handler (LIFO)
function addFirstLoadEventHandler(func) {
    var oldonload = window.onload;
    if (typeof window.onload != 'function') {
        window.onload = func;
    } else {
        window.onload = function() {
            func();
            if (oldonload) oldonload();
        }
    }
}

// Changes page style to load banner image
function setBannerImage() {
    if (!document.styleSheets) return;
    if (AVAILABLE_BANNERS < 2) return;

    var imageIndex = bannerImageIndex == null ? 1 :
                     parseInt(bannerImageIndex);
    if (imageIndex < 0 || imageIndex > AVAILABLE_BANNERS)
        imageIndex = 1;

    var rules = new Array();
    if (document.styleSheets[3].cssRules)
        rules = document.styleSheets[3].cssRules;
    else
        rules = document.styleSheets[3].rules;
    rules[0].style.backgroundImage =
        "url(../images/main_background_" + imageIndex + ".jpg)";

    setCookie(BANNER_IMAGE_INDEX, ++imageIndex + '');
}

function showTools() {
    projectTools2.style.display = "block";
    showProjectTools.style.display = "none";
    hideProjectTools.style.display = "block";
    setCookie(SHOW_PROJECT_TOOLS, "true")
}

function hideTools() {
    projectTools2.style.display = "none";
    showProjectTools.style.display = "block";
    hideProjectTools.style.display = "none";
    setCookie(SHOW_PROJECT_TOOLS, "false")
}

function initProjectTools() {
    var contentsHints = document.getElementById("contents_hints");
    var indexLinks = document.getElementById("index_links");

    var projectToolsHeader = document.createElement("h3");
    projectToolsHeader.innerHTML = "Project Tools";
    indexLinks.insertBefore(projectToolsHeader);

    projectTools2 = document.createElement("div");
    var projectTools = document.getElementById("projecttools");
    var projectToolsLinks = projectTools.getElementsByTagName("a");
    for (var i = 1; i < projectToolsLinks.length;) {
        projectTools2.appendChild(projectToolsLinks[i]);
    }
    projectTools2.style.display = showToolsCookie == "true" ? "block" : "none";
    indexLinks.insertBefore(projectTools2);

    showProjectTools = document.createElement("div");
    showProjectTools.innerHTML = "<a href='javascript:showTools();'>Show Project Tools</a>";
    showProjectTools.style.display = showToolsCookie == "true" ? "none" : "block";
    indexLinks.insertBefore(showProjectTools);

    hideProjectTools = document.createElement("div");
    hideProjectTools.innerHTML = "<a href='javascript:hideTools();'>Hide Project Tools</a>";
    hideProjectTools.style.display = showToolsCookie == "true" ? "block" : "none";
    indexLinks.insertBefore(hideProjectTools);

}

function showScreenshots() {
    var slideshow = Slimbox.open([
        ['../images/localremoteapps.jpg', 'Display local and remote Java applications.'],
        ['../images/overview.jpg', 'Display application configuration and runtime environment.'],
        ['../images/monitor.jpg', 'Monitor application memory consumption and runtime behavior.'],
        ['../images/threads.jpg', 'Monitor application threads.'],
        ['../images/profiler.jpg', 'Profile application performance or analyze memory allocation.'],
        ['../images/threaddump.jpg', 'Take and display thread dumps.'],
        ['../images/heapdump.jpg', 'Take and browse heap dumps.'],
        ['../images/coredump.jpg', 'Analyze core dumps.'],
        ['../images/appsnapshot.jpg', 'Analyze applications offline.'],
        ['../images/plugins.jpg', 'VisualVM can be easily extended by plugins.']
    ], 0);
}

function addScreenshotsLink() {
    var bannertextcontainer = document.getElementById("top_div_info");
    var bannertext = bannertextcontainer.innerHTML;
    bannertext += " <a href=\"javascript:showScreenshots();\">See screenshots</a>.";
    bannertextcontainer.innerHTML = bannertext;
}

// Predefined cookie controlling site customizations
var DISABLE_VISUALVM_THEME = "disable_visualvm_theme_cookie";
var disableTheme = getCookie(DISABLE_VISUALVM_THEME);

// Number of available banner images to display on this page
var AVAILABLE_BANNERS = 6;

// Predefined cookie tracking banner image to be displayed
var BANNER_IMAGE_INDEX = "banner_image_index_cookie";
var bannerImageIndex = getCookie(BANNER_IMAGE_INDEX);

setBannerImage();

if (disableTheme != "true") {
    var SHOW_PROJECT_TOOLS = "show_project_tools_cookie";
    var showToolsCookie = getCookie(SHOW_PROJECT_TOOLS);
    addFirstLoadEventHandler(function() {
        initProjectTools();
        addScreenshotsLink();
    });
}