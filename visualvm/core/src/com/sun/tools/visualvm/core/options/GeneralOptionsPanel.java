/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sun.tools.visualvm.core.options;

import java.util.logging.Logger;
import java.util.prefs.Preferences;
import org.openide.util.NbPreferences;

final class GeneralOptionsPanel extends javax.swing.JPanel {

    final private static Logger LOGGER = Logger.getLogger("com.sun.tools.visualvm.core.options");
    private final GeneralOptionsPanelController controller;

    GeneralOptionsPanel(GeneralOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
    // TODO listen to changes in form fields and call controller.changed()
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        mhRefresh = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        thrdRefresh = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        dataRefresh = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        instrFilter = new javax.swing.JCheckBox();

        jLabel1.setDisplayedMnemonic('h');
        jLabel1.setLabelFor(mhRefresh);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, "Monitored Host:");

        jLabel2.setDisplayedMnemonic('t');
        jLabel2.setLabelFor(thrdRefresh);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, "Threads:");

        jLabel3.setDisplayedMnemonic('m');
        jLabel3.setLabelFor(dataRefresh);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, "Monitored Data:");

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, "Polling [s]");

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, "Profiler");

        instrFilter.setMnemonic('p');
        org.openide.awt.Mnemonics.setLocalizedText(instrFilter, "Profile Java Core Classes");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(instrFilter)
                        .addContainerGap())
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(layout.createSequentialGroup()
                                    .add(jLabel4)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                    .add(jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE))
                                .add(layout.createSequentialGroup()
                                    .add(12, 12, 12)
                                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                        .add(layout.createSequentialGroup()
                                            .add(jLabel3)
                                            .add(18, 18, 18)
                                            .add(dataRefresh))
                                        .add(layout.createSequentialGroup()
                                            .add(jLabel2)
                                            .add(66, 66, 66)
                                            .add(thrdRefresh))
                                        .add(layout.createSequentialGroup()
                                            .add(jLabel1)
                                            .add(18, 18, 18)
                                            .add(mhRefresh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                            .add(12, 12, 12))
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                            .add(jLabel5)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(jSeparator2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                            .addContainerGap()))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel4)
                    .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(mhRefresh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(thrdRefresh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(dataRefresh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel5)
                    .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(instrFilter)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(CorePanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(CorePanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
        mhRefresh.setValue(GlobalPreferences.sharedInstance().getMonitoredHostPoll());
        dataRefresh.setValue(GlobalPreferences.sharedInstance().getMonitoredDataPoll());
        thrdRefresh.setValue(GlobalPreferences.sharedInstance().getThreadsPoll());
        instrFilter.setSelected(GlobalPreferences.sharedInstance().isProfilerInstrFilter());
    }

    void store() {
        GlobalPreferences.sharedInstance().setMonitoredHostPoll((Integer) mhRefresh.getValue());
        GlobalPreferences.sharedInstance().setMonitoredDataPoll((Integer) dataRefresh.getValue());
        GlobalPreferences.sharedInstance().setThreadsPoll((Integer) thrdRefresh.getValue());
        GlobalPreferences.sharedInstance().setProfilerInstrFilter(instrFilter.isSelected());
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(CorePanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(CorePanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
        GlobalPreferences.sharedInstance().store();
    }

    boolean valid() {
        try {
            int mh = (Integer) mhRefresh.getValue();
            int md = (Integer) dataRefresh.getValue();
            int th = (Integer) thrdRefresh.getValue();
            return mh > 0 && md > 0 && th > 0;
        } catch (Exception e) {
        }
        return false;
    }

    private Preferences getPreferences() {
        return NbPreferences.forModule(GeneralOptionsPanel.class);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner dataRefresh;
    private javax.swing.JCheckBox instrFilter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner mhRefresh;
    private javax.swing.JSpinner thrdRefresh;
    // End of variables declaration//GEN-END:variables
}
