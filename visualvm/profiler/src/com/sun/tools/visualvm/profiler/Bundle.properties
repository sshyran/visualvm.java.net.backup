#
# Copyright 2007-2008 Sun Microsystems, Inc.  All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
# CA 95054 USA or visit www.sun.com if you need additional information or
# have any questions.

OpenIDE-Module-Name=VisualVM-Profiler

LBL_Profiler=Profiler

LBL_Profiling_results=Profiling results

MSG_application_terminated=application terminated

MSG_profiling_inactive=profiling inactive

MSG_profiling_started=profiling started

MSG_profiling_paused=profiling paused

MSG_refreshing=refreshing...

MSG_calibration_progress=calibration in progress...

MSG_profiling_running_methods=profiling running ({0} methods instrumented)

MSG_profiling_running_classes_1=profiling running ({0} classes instrumented, tracking each object)

MSG_profiling_running_classes_2=profiling running ({0} classes instrumented, tracking each 2nd object)

MSG_profiling_running_classes_3=profiling running ({0} classes instrumented, tracking each 3rd object)

MSG_profiling_running_classes_N=profiling running ({0} classes instrumented, tracking each {1}th object)

MSG_profiling_of=<nobr>profiling of <a href='#'>

MSG_in_progress=</a> in progress</nobr>

MSG_profiling_stopped=profiling stopped

MSG_Exclude_Java_Core_Classes=Exclude Java Core Classes

MSG_Class_Sharing=<b>WARNING\!</b> Class sharing is enabled for this JVM. This can cause problems when profiling the application and eventually may crash it. Please see the VisualVM Troubleshooting Guide for more information and steps to fix the problem: {0}.

MSG_Class_Sharing_Link=<a href="https://visualvm.dev.java.net/troubleshooting.html#xshare">https://visualvm.dev.java.net/troubleshooting.html#xshare</a>

MSG_Class_Sharing_Nolink=<nobr>https://visualvm.dev.java.net/troubleshooting.html#xshare</nobr>

LBL_Profile=Profile:

LBL_Cpu=CPU

LBL_Memory=Memory

LBL_Stop=Stop

LBL_Status=Status:

MSG_Profiling_results=Profiling results

LBL_Snapshot=Snapshot

MSG_Compare_Snapshots=&Compare

DESCR_Compare_Snapshots=Compare profiler snapshots

MSG_Not_Comparable=<html><b>Selected snapshots are not comparable.</b><br><br>Check snapshots type and settings.</html>

MSG_Profile=&Profile

DESCR_Profile=Profile

MSG_Save_Profiler_Snapshot_As=Save Profiler Snapshot As

MSG_Profiler_Snapshot=Pro&filer Snapshot

DESCR_Profiler_Snapshot=Profiler Snapshot

LBL_Snapshots_Comparison=Snapshots Comparison

DESCR_Snapshots_Comparison=Profiler Snapshots Comparison\: {0} compared to {1}

MSG_Profiler_Snapshots=Profiler Snapshots

MSG_Opening_Profiler_Snapshot=Opening Profiler Snapshot...

MSG_Opening_snapshot_failed.=Opening snapshot failed.

MSG_Calibration=<html><b>Calibration will be performed.</b><br><br>Profiler will perform initial JDK calibration. Please make sure that other applications<br>are not placing a noticeable load on your machine at this time and click the OK button.</html>

LBL_Settings=Settings

LBL_Cpu_settings=CPU settings

LBL_Memory_settings=Memory settings

LBL_Profile_Allocations=Profile object allocations

LBL_Profile_AllocationsGC=Profile object allocations and GC

LBL_Record_Stacktraces=Record allocations stack traces

LBL_Run_GC=Run GC when getting results

LBL_Restore_Defaults=Restore Defaults

LBL_Root_Classes=Start profiling from classes\:

LBL_Profile_Runnables=Profile new Runnables

LBL_Profile_Incl=Profile only classes\:

LBL_Profile_Excl=Do not profile classes\:

MSG_Incorrect_CPU_settings=Incorrect CPU settings specified.

TOOLTIP_Root_Classes=<html>Profiling will start when code of these classes is invoked:<br><br><code><b>org.mypackage.**</b></code> defines all classes in the package and all subpackages<br><code><b>org.mypackage.*&nbsp;</b></code> defines all classes in the package<br><code><b>org.mypackage.MyClass</b></code> defines only <code>MyClass</code><br><br><b>Empty text</b> defines all classes</html>

TOOLTIP_New_Runnables=Classes invoked from new Threads or Runnables are automatically instrumented

TOOLTIP_Inclusive_Filter=Only code of these packages will be profiled 

TOOLTIP_Exclusive_Filter=All code except these packages will be profiled

TOOLTIP_Instrumentation_Filter=<html><code><b>org.mypackage.&nbsp;</b></code> defines only the package code<br><code><b>org.mypackage.*</b></code> defines the package and all subpackages<br><br><b>Empty text</b> defines all packages<html>

TOOLTIP_Allocations=Only object allocations are recorded

TOOLTIP_Allocations_GC=Whole lifecycle of allocated objects is recorded

LBL_Track_Every1=Track every

LBL_Track_Every2=object allocations

TOOLTIP_Track_Every=Only every n-th object is tracked to reduce profiling overhead. Total number of allocated objects is not affected.

TOOLTIP_Stack_Traces=Information about methods allocating the objects is collected
