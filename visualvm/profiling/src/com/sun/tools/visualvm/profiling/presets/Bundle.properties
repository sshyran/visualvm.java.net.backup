#
# Copyright 2007-2010 Sun Microsystems, Inc.  All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
# CA 95054 USA or visit www.sun.com if you need additional information or
# have any questions.

OptionsCategory_Name_Profiling=Profiling
OptionsCategory_Title_Profiling=Profiling

BTN_Reset2=R&eset
LBL_ResetData=Reset calibration data\:

LBL_Settings=Settings

LBL_Cpu_settings=CPU settings

LBL_Memory_settings=Memory settings

LBL_Profile_Allocations=Profile object allocations

LBL_Profile_AllocationsGC=Profile object allocations and GC

LBL_Record_Stacktraces=Record allocations stack traces

LBL_Run_GC=Run GC when getting results

LBL_Restore_Defaults=Restore Defaults

LBL_Root_Classes=Start profiling from classes\:

LBL_Profile_Runnables=Profile new Runnables

LBL_Profile_Incl=Profile only classes\:

LBL_Profile_Excl=Do not profile classes\:

LBL_Profile_Incl_S=Profile only packages\:

LBL_Profile_Excl_S=Do not profile packages\:

MSG_Incorrect_CPU_settings=Incorrect CPU settings specified.

TOOLTIP_Root_Classes=<html>Profiling will start when code of these classes is invoked:<br><br><code><b>org.mypackage.**</b></code> defines all classes in the package and all subpackages<br><code><b>org.mypackage.*&nbsp;</b></code> defines all classes in the package<br><code><b>org.mypackage.MyClass</b></code> defines only <code>MyClass</code><br><br><b>Empty text</b> defines all classes</html>

TOOLTIP_New_Runnables=Classes invoked from new Threads or Runnables are automatically instrumented

TOOLTIP_Inclusive_Filter=Only code of these packages will be profiled 

TOOLTIP_Exclusive_Filter=All code except these packages will be profiled

TOOLTIP_Inclusive_Filter_S=Only code of these packages will be profiled

TOOLTIP_Exclusive_Filter_S=All code except these packages will be profiled

TOOLTIP_Instrumentation_Filter=<html><code><b>org.mypackage.&nbsp;</b></code> defines only the package code<br><code><b>org.mypackage.*</b></code> defines the package and all subpackages<br><br><b>Empty text</b> defines all packages<html>

TOOLTIP_Allocations=Only object allocations are recorded

TOOLTIP_Allocations_GC=Whole lifecycle of allocated objects is recorded

LBL_Track_Every1=Track every

LBL_Track_Every2=object allocations

TOOLTIP_Track_Every=Only every n-th object is tracked to reduce profiling overhead. Total number of allocated objects is not affected.

TOOLTIP_Stack_Traces=Information about methods allocating the objects is collected
